name: "Test"
on: [push]
jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Terraform state
        uses: devgioele/terraform-state-artifact@v4
        with:
          passphrase: ${{ secrets.TF_STATE_PASSPHRASE }}
          download_upload: download
        continue-on-error: true

      - uses: cachix/install-nix-action@v18
      - uses: rrbutani/use-nix-shell-action@v1
        with:
          devShell: .#
          interpreter: bash
          clearEnvForScript: false
          script: |
            # use strict
            set -e
            set -u
            set -o pipefail

            env
            cd terraform
            terraform init
            terraform validate
      - name: Upload Terraform state
        uses: devgioele/terraform-state-artifact@v4
        with:
          passphrase: ${{ secrets.TF_STATE_PASSPHRASE }}
          download_upload: upload
  Docker-Image:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hello_world
        IMAGE_TAG: ${{ github.head_ref || github.ref_name }} 
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./app/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG 
